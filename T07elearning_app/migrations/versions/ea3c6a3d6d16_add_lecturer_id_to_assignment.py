"""Add lecturer_id to Assignment

Revision ID: ea3c6a3d6d16
Revises: 220d42b86221
Create Date: 2025-03-01 17:28:11.487024

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import table, column
from sqlalchemy import Integer, update


# revision identifiers, used by Alembic.
revision = 'ea3c6a3d6d16'
down_revision = '220d42b86221'
branch_labels = None
depends_on = None


def upgrade():
    # Allow lecturer_id to be nullable initially
    with op.batch_alter_table('assignments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('lecturer_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key('fk_assignments_lecturer_id', 'users', ['lecturer_id'], ['id'])

    # Set a default lecturer_id for existing records
    assignments_table = table('assignments',
                              column('id', Integer),
                              column('lecturer_id', Integer))

    # Assuming you have a default lecturer with id=1
    op.execute(
        update(assignments_table).
        where(assignments_table.c.lecturer_id == None).
        values(lecturer_id=1)
    )

    # Make lecturer_id non-nullable
    with op.batch_alter_table('assignments', schema=None) as batch_op:
        batch_op.alter_column('lecturer_id', existing_type=Integer, nullable=False)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('assignments', schema=None) as batch_op:
        batch_op.drop_constraint('fk_assignments_lecturer_id', type_='foreignkey')
        batch_op.drop_column('lecturer_id')

    # ### end Alembic commands ###
